/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clueLess;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.LinkedHashMap;

/**
 *
 * @author Alisha R. Hunt
 */
public class GameBoard extends javax.swing.JFrame {

    //LinkedHashMap<String, String> roomContains = new LinkedHashMap<String, String>();
    private int roomContains[][] = new int[21][0];
    
    private int gameID;
    private int userCount=0;
    private String userID;
    public String users[]= new String[6];
    private final String suspectDef[] = {"Col. Mustard","Prof. Plum","Mr. Green",
        "Mrs. Peacock","Miss Scarlet","Mrs.White"};
    private final String roomDef[] = {"Study","Library","Conservatory","Hall",
        "Billiard Room","Ballroom","Lounge","Dining Room","Kitchen","Hallway9",
        "Hallway10","Hallway11","Hallway12","Hallway13","Hallway14","Hallway15",
        "Hallway16","Hallway17","Hallway18","Hallway19","Hallway20"};
    private final String weaponDef[] = {"Knife","Candlestick","Pistol","Rope","Lead Pipe","Wrench"};
    
    private int moveOpts[];
    private int cardTypeRefs[];
    private int cardIDRefs[];
    private int playerLocation;
    private int playerLocations[] = new int[6];
    
    /**
     * Creates new form GameBoard
     */
    public GameBoard() {
        initComponents();
        for(int i=0;i<6;i++){
            playerLocations[i] = -1;
        }
        this.pack();
        this.setLocationRelativeTo(null);
        closeRoomSelection();
        hideMenus();
            }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Welcome = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        EnterUserID = new javax.swing.JPanel();
        userIDfield = new javax.swing.JTextField();
        userIDprompt = new javax.swing.JLabel();
        GameOps = new javax.swing.JPanel();
        startNewGameButton = new javax.swing.JButton();
        gameIDfield = new javax.swing.JTextField();
        gameIDprompt = new javax.swing.JLabel();
        Lobby = new javax.swing.JPanel();
        lobbyWelcome = new javax.swing.JLabel();
        startGameBox = new javax.swing.JPanel();
        startGamePrompt = new javax.swing.JLabel();
        startGamePrompt1 = new javax.swing.JLabel();
        startGameButton = new javax.swing.JButton();
        lobbyGameIDlabel = new javax.swing.JLabel();
        LobbyPlayersScrollPane = new javax.swing.JScrollPane();
        playersInLobby = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        Gameboard = new javax.swing.JPanel();
        cardPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cardList = new javax.swing.JList<>();
        textUpdatePanel = new javax.swing.JScrollPane();
        textUpdateBox = new javax.swing.JTextArea();
        DetectiveNotesPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        DNsuspect2 = new javax.swing.JCheckBox();
        DNsuspect1 = new javax.swing.JCheckBox();
        DNsuspect4 = new javax.swing.JCheckBox();
        DNsuspect5 = new javax.swing.JCheckBox();
        DNsuspect3 = new javax.swing.JCheckBox();
        DNsuspect6 = new javax.swing.JCheckBox();
        DNhall = new javax.swing.JCheckBox();
        DNlounge = new javax.swing.JCheckBox();
        DNdiningroom = new javax.swing.JCheckBox();
        DNkitchen = new javax.swing.JCheckBox();
        DNballroom = new javax.swing.JCheckBox();
        DNconservatory = new javax.swing.JCheckBox();
        DNbilliardroom = new javax.swing.JCheckBox();
        DNlibrary = new javax.swing.JCheckBox();
        DNstudy = new javax.swing.JCheckBox();
        DNknife = new javax.swing.JCheckBox();
        DNcandlestick = new javax.swing.JCheckBox();
        DNpistol = new javax.swing.JCheckBox();
        DNrope = new javax.swing.JCheckBox();
        DNleadpipe = new javax.swing.JCheckBox();
        DNwrench = new javax.swing.JCheckBox();
        GameboardPanel = new javax.swing.JPanel();
        smallerGameboardPanel = new javax.swing.JPanel();
        Hallway13 = new javax.swing.JButton();
        Hallway19 = new javax.swing.JButton();
        Hallway18 = new javax.swing.JButton();
        Conservatory = new javax.swing.JButton();
        Hallway12 = new javax.swing.JButton();
        Hallway15 = new javax.swing.JButton();
        Lounge = new javax.swing.JButton();
        Ballroom = new javax.swing.JButton();
        Hallway10 = new javax.swing.JButton();
        Library = new javax.swing.JButton();
        Hallway14 = new javax.swing.JButton();
        Hallway11 = new javax.swing.JButton();
        Hallway16 = new javax.swing.JButton();
        Hallway9 = new javax.swing.JButton();
        Study = new javax.swing.JButton();
        Hallway20 = new javax.swing.JButton();
        DiningRoom = new javax.swing.JButton();
        Kitchen = new javax.swing.JButton();
        Hallway17 = new javax.swing.JButton();
        BilliardRoom = new javax.swing.JButton();
        Hall = new javax.swing.JButton();
        GamePopup = new javax.swing.JPanel();
        turnMenu = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        opMovePlayer = new java.awt.Button();
        opSuggestion = new java.awt.Button();
        opAccusation = new java.awt.Button();
        opEndTurn = new java.awt.Button();
        accusationMenu = new javax.swing.JPanel();
        accusationLabel = new javax.swing.JLabel();
        accusationWarning = new javax.swing.JLabel();
        suspectDropdown = new java.awt.Choice();
        roomDropdown = new java.awt.Choice();
        weaponDropdown = new java.awt.Choice();
        suspectlabel = new java.awt.Label();
        roomlabel = new java.awt.Label();
        weaponlabel = new java.awt.Label();
        cancelAccusation = new java.awt.Button();
        makeAccusation = new java.awt.Button();
        suggestionMenu = new javax.swing.JPanel();
        suggestionLabel = new javax.swing.JLabel();
        suspectDropdown2 = new java.awt.Choice();
        roomDropdown2 = new java.awt.Choice();
        weaponDropdown2 = new java.awt.Choice();
        suspectlabel2 = new java.awt.Label();
        roomlabel2 = new java.awt.Label();
        weaponlabel2 = new java.awt.Label();
        makeSuggestion = new java.awt.Button();
        disproveSugMenu = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        cardDropdown = new java.awt.Choice();
        disproveButton = new java.awt.Button();
        Winning = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Losing = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jLabel4.setFont(new java.awt.Font("Old English Text MT", 0, 60)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Welcome to Clue-Less!!");

        EnterUserID.setBackground(new java.awt.Color(153, 153, 153));
        EnterUserID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        userIDfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIDfieldActionPerformed(evt);
            }
        });

        userIDprompt.setText("Enter a name for yourself");

        javax.swing.GroupLayout EnterUserIDLayout = new javax.swing.GroupLayout(EnterUserID);
        EnterUserID.setLayout(EnterUserIDLayout);
        EnterUserIDLayout.setHorizontalGroup(
            EnterUserIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EnterUserIDLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(EnterUserIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(userIDfield, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userIDprompt, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addGap(64, 64, 64))
        );
        EnterUserIDLayout.setVerticalGroup(
            EnterUserIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EnterUserIDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userIDprompt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(userIDfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        GameOps.setBackground(new java.awt.Color(153, 153, 153));
        GameOps.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        startNewGameButton.setText("Start a New Game");
        startNewGameButton.setActionCommand("NewGame");
        startNewGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startNewGameButtonActionPerformed(evt);
            }
        });

        gameIDfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameIDfieldActionPerformed(evt);
            }
        });

        gameIDprompt.setText("Or enter an existing Game ID");

        javax.swing.GroupLayout GameOpsLayout = new javax.swing.GroupLayout(GameOps);
        GameOps.setLayout(GameOpsLayout);
        GameOpsLayout.setHorizontalGroup(
            GameOpsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameOpsLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(GameOpsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(gameIDfield, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gameIDprompt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startNewGameButton))
                .addGap(32, 32, 32))
        );
        GameOpsLayout.setVerticalGroup(
            GameOpsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameOpsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startNewGameButton)
                .addGap(26, 26, 26)
                .addComponent(gameIDprompt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gameIDfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EnterUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(GameOps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EnterUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(GameOps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout WelcomeLayout = new javax.swing.GroupLayout(Welcome);
        Welcome.setLayout(WelcomeLayout);
        WelcomeLayout.setHorizontalGroup(
            WelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WelcomeLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
                .addGap(87, 87, 87))
            .addGroup(WelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(WelcomeLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        WelcomeLayout.setVerticalGroup(
            WelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WelcomeLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(961, Short.MAX_VALUE))
            .addGroup(WelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(WelcomeLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(Welcome, "card3");

        lobbyWelcome.setFont(new java.awt.Font("Old English Text MT", 0, 60)); // NOI18N
        lobbyWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lobbyWelcome.setText("Welcome:");

        startGameBox.setBackground(new java.awt.Color(153, 153, 153));
        startGameBox.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        startGamePrompt.setText(" Click start when you are ready to play!");

        startGamePrompt1.setText("Note: you need at least 3 players");

        startGameButton.setText("START GAME!!");
        startGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout startGameBoxLayout = new javax.swing.GroupLayout(startGameBox);
        startGameBox.setLayout(startGameBoxLayout);
        startGameBoxLayout.setHorizontalGroup(
            startGameBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startGameBoxLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(startGameBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(startGamePrompt1)
                    .addComponent(startGamePrompt, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(startGameButton))
                .addGap(51, 51, 51))
        );
        startGameBoxLayout.setVerticalGroup(
            startGameBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startGameBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startGamePrompt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startGamePrompt1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startGameButton)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        lobbyGameIDlabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lobbyGameIDlabel.setText("Game ID:");

        playersInLobby.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        playersInLobby.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        LobbyPlayersScrollPane.setViewportView(playersInLobby);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Players currently in the game:");

        javax.swing.GroupLayout LobbyLayout = new javax.swing.GroupLayout(Lobby);
        Lobby.setLayout(LobbyLayout);
        LobbyLayout.setHorizontalGroup(
            LobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LobbyLayout.createSequentialGroup()
                .addGroup(LobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LobbyLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addGroup(LobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(LobbyPlayersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lobbyWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lobbyGameIDlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LobbyLayout.createSequentialGroup()
                        .addGap(417, 417, 417)
                        .addComponent(startGameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(LobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LobbyLayout.createSequentialGroup()
                    .addGap(236, 236, 236)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(557, Short.MAX_VALUE)))
        );
        LobbyLayout.setVerticalGroup(
            LobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LobbyLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(LobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lobbyWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lobbyGameIDlabel))
                .addGap(90, 90, 90)
                .addComponent(LobbyPlayersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(startGameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(475, Short.MAX_VALUE))
            .addGroup(LobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LobbyLayout.createSequentialGroup()
                    .addGap(168, 168, 168)
                    .addComponent(jLabel11)
                    .addContainerGap(872, Short.MAX_VALUE)))
        );

        getContentPane().add(Lobby, "card4");

        cardPanel.setBackground(new java.awt.Color(0, 0, 255));

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Notes:");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Your Cards:");

        cardList.setBackground(new java.awt.Color(0, 0, 255));
        cardList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cardList.setForeground(new java.awt.Color(255, 153, 153));
        cardList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(cardList);

        javax.swing.GroupLayout cardPanelLayout = new javax.swing.GroupLayout(cardPanel);
        cardPanel.setLayout(cardPanelLayout);
        cardPanelLayout.setHorizontalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(cardPanelLayout.createSequentialGroup()
                        .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        cardPanelLayout.setVerticalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        textUpdateBox.setColumns(20);
        textUpdateBox.setRows(5);
        textUpdateBox.setText("This will be the UI text display box along the bottom.");
        textUpdatePanel.setViewportView(textUpdateBox);

        DetectiveNotesPanel.setBackground(new java.awt.Color(0, 0, 255));

        jLabel1.setForeground(new java.awt.Color(204, 255, 204));
        jLabel1.setText("Detective Notes");

        jLabel8.setForeground(new java.awt.Color(204, 255, 204));
        jLabel8.setText("Suspects:");

        jLabel15.setForeground(new java.awt.Color(204, 255, 204));
        jLabel15.setText("Rooms:");

        jLabel25.setForeground(new java.awt.Color(204, 255, 204));
        jLabel25.setText("Weapons:");

        DNsuspect2.setForeground(new java.awt.Color(255, 102, 102));
        DNsuspect2.setText("Suspect 1");
        DNsuspect2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNsuspect2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNsuspect2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNsuspect2ActionPerformed(evt);
            }
        });

        DNsuspect1.setForeground(new java.awt.Color(204, 0, 0));
        DNsuspect1.setText("Suspect 1");
        DNsuspect1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNsuspect1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNsuspect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNsuspect1ActionPerformed(evt);
            }
        });

        DNsuspect4.setForeground(new java.awt.Color(255, 102, 102));
        DNsuspect4.setText("Suspect 1");
        DNsuspect4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNsuspect4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNsuspect4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNsuspect4ActionPerformed(evt);
            }
        });

        DNsuspect5.setForeground(new java.awt.Color(255, 102, 102));
        DNsuspect5.setText("Suspect 1");
        DNsuspect5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNsuspect5.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNsuspect5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNsuspect5ActionPerformed(evt);
            }
        });

        DNsuspect3.setForeground(new java.awt.Color(255, 102, 102));
        DNsuspect3.setText("Suspect 1");
        DNsuspect3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNsuspect3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNsuspect3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNsuspect3ActionPerformed(evt);
            }
        });

        DNsuspect6.setForeground(new java.awt.Color(255, 102, 102));
        DNsuspect6.setText("Suspect 1");
        DNsuspect6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNsuspect6.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNsuspect6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNsuspect6ActionPerformed(evt);
            }
        });

        DNhall.setForeground(new java.awt.Color(255, 102, 102));
        DNhall.setText("Hall");
        DNhall.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNhall.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNhall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNhallActionPerformed(evt);
            }
        });

        DNlounge.setForeground(new java.awt.Color(255, 102, 102));
        DNlounge.setText("Lounge");
        DNlounge.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNlounge.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNlounge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNloungeActionPerformed(evt);
            }
        });

        DNdiningroom.setForeground(new java.awt.Color(255, 102, 102));
        DNdiningroom.setText("Dining Room");
        DNdiningroom.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNdiningroom.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNdiningroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNdiningroomActionPerformed(evt);
            }
        });

        DNkitchen.setForeground(new java.awt.Color(255, 102, 102));
        DNkitchen.setText("Kitchen");
        DNkitchen.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNkitchen.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNkitchen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNkitchenActionPerformed(evt);
            }
        });

        DNballroom.setForeground(new java.awt.Color(255, 102, 102));
        DNballroom.setText("Ballroom");
        DNballroom.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNballroom.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNballroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNballroomActionPerformed(evt);
            }
        });

        DNconservatory.setForeground(new java.awt.Color(255, 102, 102));
        DNconservatory.setText("Conservatory");
        DNconservatory.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNconservatory.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNconservatory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNconservatoryActionPerformed(evt);
            }
        });

        DNbilliardroom.setForeground(new java.awt.Color(255, 102, 102));
        DNbilliardroom.setText("Billiard Room");
        DNbilliardroom.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNbilliardroom.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNbilliardroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNbilliardroomActionPerformed(evt);
            }
        });

        DNlibrary.setForeground(new java.awt.Color(255, 102, 102));
        DNlibrary.setText("Library");
        DNlibrary.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNlibrary.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNlibrary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNlibraryActionPerformed(evt);
            }
        });

        DNstudy.setForeground(new java.awt.Color(255, 102, 102));
        DNstudy.setText("Study");
        DNstudy.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNstudy.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNstudy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNstudyActionPerformed(evt);
            }
        });

        DNknife.setForeground(new java.awt.Color(255, 102, 102));
        DNknife.setText("Knife");
        DNknife.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNknife.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNknife.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNknifeActionPerformed(evt);
            }
        });

        DNcandlestick.setForeground(new java.awt.Color(255, 102, 102));
        DNcandlestick.setText("Candlestick");
        DNcandlestick.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNcandlestick.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNcandlestick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNcandlestickActionPerformed(evt);
            }
        });

        DNpistol.setForeground(new java.awt.Color(255, 102, 102));
        DNpistol.setText("Pistol");
        DNpistol.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNpistol.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNpistol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNpistolActionPerformed(evt);
            }
        });

        DNrope.setForeground(new java.awt.Color(255, 102, 102));
        DNrope.setText("Rope");
        DNrope.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNrope.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNrope.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNropeActionPerformed(evt);
            }
        });

        DNleadpipe.setForeground(new java.awt.Color(255, 102, 102));
        DNleadpipe.setText("Lead Pipe");
        DNleadpipe.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNleadpipe.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNleadpipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNleadpipeActionPerformed(evt);
            }
        });

        DNwrench.setForeground(new java.awt.Color(255, 102, 102));
        DNwrench.setText("Wrench");
        DNwrench.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        DNwrench.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        DNwrench.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNwrenchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DetectiveNotesPanelLayout = new javax.swing.GroupLayout(DetectiveNotesPanel);
        DetectiveNotesPanel.setLayout(DetectiveNotesPanelLayout);
        DetectiveNotesPanelLayout.setHorizontalGroup(
            DetectiveNotesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DetectiveNotesPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(DetectiveNotesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DetectiveNotesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(DetectiveNotesPanelLayout.createSequentialGroup()
                        .addGroup(DetectiveNotesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel25)
                            .addComponent(jLabel8))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DetectiveNotesPanelLayout.createSequentialGroup()
                        .addGroup(DetectiveNotesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DNwrench, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNleadpipe, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNrope, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNpistol, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNcandlestick, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNknife, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNstudy, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNlibrary, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNconservatory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNballroom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNhall, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNlounge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNdiningroom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNkitchen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNsuspect6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNsuspect5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNsuspect4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNsuspect3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNsuspect2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DNsuspect1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DNbilliardroom))
                        .addGap(43, 43, 43))))
        );

        DetectiveNotesPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DNballroom, DNbilliardroom, DNcandlestick, DNconservatory, DNdiningroom, DNhall, DNkitchen, DNknife, DNleadpipe, DNlibrary, DNlounge, DNpistol, DNrope, DNstudy, DNsuspect2, DNsuspect3, DNsuspect4, DNsuspect5, DNsuspect6, DNwrench});

        DetectiveNotesPanelLayout.setVerticalGroup(
            DetectiveNotesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DetectiveNotesPanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DNsuspect1)
                .addGap(5, 5, 5)
                .addComponent(DNsuspect2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNsuspect3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNsuspect4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNsuspect5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNsuspect6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNhall)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNlounge)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNdiningroom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNkitchen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNballroom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNconservatory)
                .addGap(0, 0, 0)
                .addComponent(DNbilliardroom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNlibrary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNstudy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNknife)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNcandlestick)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNpistol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNrope)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNleadpipe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DNwrench)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GameboardPanel.setBackground(new java.awt.Color(102, 153, 255));

        smallerGameboardPanel.setBackground(new java.awt.Color(0, 0, 0));
        smallerGameboardPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Hallway13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway13ActionPerformed(evt);
            }
        });

        Hallway19.setMaximumSize(new java.awt.Dimension(9, 33));
        Hallway19.setMinimumSize(new java.awt.Dimension(9, 33));
        Hallway19.setPreferredSize(new java.awt.Dimension(9, 33));
        Hallway19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway19ActionPerformed(evt);
            }
        });

        Hallway18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway18ActionPerformed(evt);
            }
        });

        Conservatory.setText("<html>Conserv<br />atory<html>");
        Conservatory.setMaximumSize(new java.awt.Dimension(100, 100));
        Conservatory.setMinimumSize(new java.awt.Dimension(100, 100));
        Conservatory.setPreferredSize(new java.awt.Dimension(100, 100));
        Conservatory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConservatoryActionPerformed(evt);
            }
        });

        Hallway12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway12ActionPerformed(evt);
            }
        });

        Hallway15.setMaximumSize(new java.awt.Dimension(9, 33));
        Hallway15.setMinimumSize(new java.awt.Dimension(9, 33));
        Hallway15.setPreferredSize(new java.awt.Dimension(9, 33));
        Hallway15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway15ActionPerformed(evt);
            }
        });

        Lounge.setText("Lounge");
        Lounge.setMaximumSize(new java.awt.Dimension(100, 100));
        Lounge.setMinimumSize(new java.awt.Dimension(100, 100));
        Lounge.setPreferredSize(new java.awt.Dimension(100, 100));
        Lounge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoungeActionPerformed(evt);
            }
        });

        Ballroom.setText("Ballroom");
        Ballroom.setMaximumSize(new java.awt.Dimension(100, 100));
        Ballroom.setMinimumSize(new java.awt.Dimension(100, 100));
        Ballroom.setPreferredSize(new java.awt.Dimension(100, 100));
        Ballroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BallroomActionPerformed(evt);
            }
        });

        Hallway10.setMaximumSize(new java.awt.Dimension(9, 33));
        Hallway10.setMinimumSize(new java.awt.Dimension(9, 33));
        Hallway10.setPreferredSize(new java.awt.Dimension(9, 33));
        Hallway10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway10ActionPerformed(evt);
            }
        });

        Library.setText("Library");
        Library.setMaximumSize(new java.awt.Dimension(100, 100));
        Library.setMinimumSize(new java.awt.Dimension(100, 100));
        Library.setPreferredSize(new java.awt.Dimension(100, 100));
        Library.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LibraryActionPerformed(evt);
            }
        });

        Hallway14.setMaximumSize(new java.awt.Dimension(9, 33));
        Hallway14.setMinimumSize(new java.awt.Dimension(9, 33));
        Hallway14.setPreferredSize(new java.awt.Dimension(9, 33));
        Hallway14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway14ActionPerformed(evt);
            }
        });

        Hallway11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway11ActionPerformed(evt);
            }
        });

        Hallway16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway16ActionPerformed(evt);
            }
        });

        Hallway9.setMaximumSize(new java.awt.Dimension(9, 33));
        Hallway9.setMinimumSize(new java.awt.Dimension(9, 33));
        Hallway9.setPreferredSize(new java.awt.Dimension(9, 33));
        Hallway9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway9ActionPerformed(evt);
            }
        });

        Study.setText("Study\n");
        Study.setMaximumSize(new java.awt.Dimension(100, 100));
        Study.setMinimumSize(new java.awt.Dimension(100, 100));
        Study.setPreferredSize(new java.awt.Dimension(100, 100));
        Study.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudyActionPerformed(evt);
            }
        });

        Hallway20.setMaximumSize(new java.awt.Dimension(9, 33));
        Hallway20.setMinimumSize(new java.awt.Dimension(9, 33));
        Hallway20.setPreferredSize(new java.awt.Dimension(9, 33));
        Hallway20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway20ActionPerformed(evt);
            }
        });

        DiningRoom.setText("<html>Dining<br />Room</html>");
        DiningRoom.setMaximumSize(new java.awt.Dimension(100, 100));
        DiningRoom.setMinimumSize(new java.awt.Dimension(100, 100));
        DiningRoom.setPreferredSize(new java.awt.Dimension(100, 100));
        DiningRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiningRoomActionPerformed(evt);
            }
        });

        Kitchen.setText("Kitchen");
        Kitchen.setMaximumSize(new java.awt.Dimension(100, 100));
        Kitchen.setMinimumSize(new java.awt.Dimension(100, 100));
        Kitchen.setPreferredSize(new java.awt.Dimension(100, 100));
        Kitchen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KitchenActionPerformed(evt);
            }
        });

        Hallway17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hallway17ActionPerformed(evt);
            }
        });

        BilliardRoom.setText("<html>Billiard<br /> Room</html>");
        BilliardRoom.setMaximumSize(new java.awt.Dimension(100, 100));
        BilliardRoom.setMinimumSize(new java.awt.Dimension(100, 100));
        BilliardRoom.setPreferredSize(new java.awt.Dimension(100, 100));
        BilliardRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BilliardRoomActionPerformed(evt);
            }
        });

        Hall.setText("Hall");
        Hall.setMaximumSize(new java.awt.Dimension(100, 100));
        Hall.setMinimumSize(new java.awt.Dimension(100, 100));
        Hall.setPreferredSize(new java.awt.Dimension(100, 100));
        Hall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout smallerGameboardPanelLayout = new javax.swing.GroupLayout(smallerGameboardPanel);
        smallerGameboardPanel.setLayout(smallerGameboardPanelLayout);
        smallerGameboardPanelLayout.setHorizontalGroup(
            smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, smallerGameboardPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, smallerGameboardPanelLayout.createSequentialGroup()
                                        .addComponent(Conservatory, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Hallway13, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, smallerGameboardPanelLayout.createSequentialGroup()
                                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Study, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Library, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Hallway11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Hallway12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(Hallway9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(Hallway10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Ballroom, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hallway15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BilliardRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hallway14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hall, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Hallway16, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Hallway17, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Hallway18, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Kitchen, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DiningRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Lounge, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, smallerGameboardPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, smallerGameboardPanelLayout.createSequentialGroup()
                                .addComponent(Hallway20, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, smallerGameboardPanelLayout.createSequentialGroup()
                                .addComponent(Hallway19, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56))))))
        );
        smallerGameboardPanelLayout.setVerticalGroup(
            smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                .addComponent(Study, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Hallway9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Library, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, smallerGameboardPanelLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(Hallway11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(155, 155, 155)
                                .addComponent(Hallway12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BilliardRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Hallway10, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Hallway15, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(Hallway20, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Conservatory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ballroom, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Kitchen, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(Hallway13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Lounge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Hall, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(Hallway16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(Hallway17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(smallerGameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Hallway14, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(smallerGameboardPanelLayout.createSequentialGroup()
                                        .addComponent(Hallway19, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DiningRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Hallway18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))))
        );

        javax.swing.GroupLayout GameboardPanelLayout = new javax.swing.GroupLayout(GameboardPanel);
        GameboardPanel.setLayout(GameboardPanelLayout);
        GameboardPanelLayout.setHorizontalGroup(
            GameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GameboardPanelLayout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(smallerGameboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        GameboardPanelLayout.setVerticalGroup(
            GameboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GameboardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(smallerGameboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        GamePopup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        GamePopup.setLayout(new java.awt.CardLayout());

        jLabel10.setFont(new java.awt.Font("Old English Text MT", 0, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("It's your turn!");

        jLabel3.setText("Please select from the following move options:");

        opMovePlayer.setLabel("Move locations");
        opMovePlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opMovePlayerActionPerformed(evt);
            }
        });

        opSuggestion.setLabel("Make a suggestion");
        opSuggestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opSuggestionActionPerformed(evt);
            }
        });

        opAccusation.setLabel("Make an accusation");
        opAccusation.setName(""); // NOI18N
        opAccusation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opAccusationActionPerformed(evt);
            }
        });

        opEndTurn.setLabel("End turn");
        opEndTurn.setName(""); // NOI18N
        opEndTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opEndTurnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout turnMenuLayout = new javax.swing.GroupLayout(turnMenu);
        turnMenu.setLayout(turnMenuLayout);
        turnMenuLayout.setHorizontalGroup(
            turnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(turnMenuLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(turnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(opAccusation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(opSuggestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(opMovePlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(opEndTurn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(142, Short.MAX_VALUE))
            .addGroup(turnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(turnMenuLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(turnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        turnMenuLayout.setVerticalGroup(
            turnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(turnMenuLayout.createSequentialGroup()
                .addContainerGap(111, Short.MAX_VALUE)
                .addComponent(opMovePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opSuggestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opAccusation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opEndTurn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(turnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(turnMenuLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel3)
                    .addContainerGap(172, Short.MAX_VALUE)))
        );

        opSuggestion.getAccessibleContext().setAccessibleName("makeSuggestion");

        GamePopup.add(turnMenu, "card2");

        accusationLabel.setFont(new java.awt.Font("Old English Text MT", 0, 24)); // NOI18N
        accusationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        accusationLabel.setText("Make an Accusation!!");

        accusationWarning.setText("WARNING: You will lose the game if wrong");

        suspectlabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        suspectlabel.setText("Suspect");

        roomlabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        roomlabel.setText("Room");

        weaponlabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        weaponlabel.setText("Weapon");

        cancelAccusation.setLabel("Nevermind");
        cancelAccusation.setName("backButton"); // NOI18N
        cancelAccusation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAccusationActionPerformed(evt);
            }
        });

        makeAccusation.setLabel("MAKE ACCUSATION!");
        makeAccusation.setName("accusationButton"); // NOI18N
        makeAccusation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeAccusationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout accusationMenuLayout = new javax.swing.GroupLayout(accusationMenu);
        accusationMenu.setLayout(accusationMenuLayout);
        accusationMenuLayout.setHorizontalGroup(
            accusationMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accusationMenuLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(cancelAccusation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(makeAccusation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(accusationMenuLayout.createSequentialGroup()
                .addGroup(accusationMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accusationMenuLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(accusationMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(accusationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accusationWarning)))
                    .addGroup(accusationMenuLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(accusationMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(accusationMenuLayout.createSequentialGroup()
                                .addComponent(weaponlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(weaponDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(accusationMenuLayout.createSequentialGroup()
                                .addComponent(roomlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(roomDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(accusationMenuLayout.createSequentialGroup()
                                .addComponent(suspectlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(suspectDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        accusationMenuLayout.setVerticalGroup(
            accusationMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accusationMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(accusationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accusationWarning)
                .addGap(18, 18, 18)
                .addGroup(accusationMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suspectlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suspectDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(accusationMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(accusationMenuLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(roomDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weaponDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accusationMenuLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(weaponlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(accusationMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(makeAccusation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelAccusation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        GamePopup.add(accusationMenu, "card2");

        suggestionLabel.setFont(new java.awt.Font("Old English Text MT", 0, 24)); // NOI18N
        suggestionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        suggestionLabel.setText("Make a Suggestion");

        suspectlabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        suspectlabel2.setText("Suspect");

        roomlabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        roomlabel2.setText("Room");

        weaponlabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        weaponlabel2.setText("Weapon");

        makeSuggestion.setLabel("Make suggestion");
        makeSuggestion.setName("accusationButton"); // NOI18N
        makeSuggestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeSuggestionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout suggestionMenuLayout = new javax.swing.GroupLayout(suggestionMenu);
        suggestionMenu.setLayout(suggestionMenuLayout);
        suggestionMenuLayout.setHorizontalGroup(
            suggestionMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(suggestionMenuLayout.createSequentialGroup()
                .addGroup(suggestionMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(suggestionMenuLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(suggestionMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(suggestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(makeSuggestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(suggestionMenuLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(suggestionMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(suggestionMenuLayout.createSequentialGroup()
                                .addComponent(weaponlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(weaponDropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(suggestionMenuLayout.createSequentialGroup()
                                .addComponent(roomlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(roomDropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(suggestionMenuLayout.createSequentialGroup()
                                .addComponent(suspectlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(suspectDropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        suggestionMenuLayout.setVerticalGroup(
            suggestionMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(suggestionMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(suggestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(suggestionMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suspectlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suspectDropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(suggestionMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(suggestionMenuLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(roomDropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weaponDropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(suggestionMenuLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(weaponlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(makeSuggestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        GamePopup.add(suggestionMenu, "card2");

        jLabel12.setFont(new java.awt.Font("Old English Text MT", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Please choose a card to disprove another player's suggestion");

        disproveButton.setLabel("Disprove");
        disproveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disproveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout disproveSugMenuLayout = new javax.swing.GroupLayout(disproveSugMenu);
        disproveSugMenu.setLayout(disproveSugMenuLayout);
        disproveSugMenuLayout.setHorizontalGroup(
            disproveSugMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(disproveSugMenuLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(disproveSugMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .addComponent(disproveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, disproveSugMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cardDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
        );
        disproveSugMenuLayout.setVerticalGroup(
            disproveSugMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(disproveSugMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(cardDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(disproveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        GamePopup.add(disproveSugMenu, "card2");

        javax.swing.GroupLayout GameboardLayout = new javax.swing.GroupLayout(Gameboard);
        Gameboard.setLayout(GameboardLayout);
        GameboardLayout.setHorizontalGroup(
            GameboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GameboardLayout.createSequentialGroup()
                .addContainerGap(491, Short.MAX_VALUE)
                .addComponent(GamePopup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(346, 346, 346))
            .addGroup(GameboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GameboardLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(GameboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(textUpdatePanel)
                        .addGroup(GameboardLayout.createSequentialGroup()
                            .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(GameboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(DetectiveNotesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        GameboardLayout.setVerticalGroup(
            GameboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameboardLayout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(GamePopup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(758, Short.MAX_VALUE))
            .addGroup(GameboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GameboardLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(GameboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(GameboardPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DetectiveNotesPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(textUpdatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        getContentPane().add(Gameboard, "card2");

        jLabel7.setFont(new java.awt.Font("Old English Text MT", 0, 60)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Congratulations! You've won!!");

        javax.swing.GroupLayout WinningLayout = new javax.swing.GroupLayout(Winning);
        Winning.setLayout(WinningLayout);
        WinningLayout.setHorizontalGroup(
            WinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1226, Short.MAX_VALUE)
            .addGroup(WinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(WinningLayout.createSequentialGroup()
                    .addGap(233, 233, 233)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(234, Short.MAX_VALUE)))
        );
        WinningLayout.setVerticalGroup(
            WinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1049, Short.MAX_VALUE)
            .addGroup(WinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(WinningLayout.createSequentialGroup()
                    .addGap(420, 420, 420)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(521, Short.MAX_VALUE)))
        );

        getContentPane().add(Winning, "card5");

        jLabel9.setFont(new java.awt.Font("Old English Text MT", 0, 60)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Sorry! You lost the game.. ");

        javax.swing.GroupLayout LosingLayout = new javax.swing.GroupLayout(Losing);
        Losing.setLayout(LosingLayout);
        LosingLayout.setHorizontalGroup(
            LosingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1226, Short.MAX_VALUE)
            .addGroup(LosingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LosingLayout.createSequentialGroup()
                    .addGap(233, 233, 233)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(234, Short.MAX_VALUE)))
        );
        LosingLayout.setVerticalGroup(
            LosingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1049, Short.MAX_VALUE)
            .addGroup(LosingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LosingLayout.createSequentialGroup()
                    .addGap(420, 420, 420)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(498, Short.MAX_VALUE)))
        );

        getContentPane().add(Losing, "card6");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DNsuspect2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNsuspect2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNsuspect2ActionPerformed

    private void DNsuspect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNsuspect1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNsuspect1ActionPerformed

    private void DNsuspect4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNsuspect4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNsuspect4ActionPerformed

    private void DNsuspect5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNsuspect5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNsuspect5ActionPerformed

    private void DNsuspect3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNsuspect3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNsuspect3ActionPerformed

    private void DNsuspect6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNsuspect6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNsuspect6ActionPerformed

    private void DNhallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNhallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNhallActionPerformed

    private void DNloungeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNloungeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNloungeActionPerformed

    private void DNdiningroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNdiningroomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNdiningroomActionPerformed

    private void DNkitchenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNkitchenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNkitchenActionPerformed

    private void DNballroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNballroomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNballroomActionPerformed

    private void DNconservatoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNconservatoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNconservatoryActionPerformed

    private void DNbilliardroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNbilliardroomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNbilliardroomActionPerformed

    private void DNlibraryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNlibraryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNlibraryActionPerformed

    private void DNstudyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNstudyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNstudyActionPerformed

    private void DNknifeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNknifeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNknifeActionPerformed

    private void DNcandlestickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNcandlestickActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNcandlestickActionPerformed

    private void DNpistolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNpistolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNpistolActionPerformed

    private void DNropeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNropeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNropeActionPerformed

    private void DNleadpipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNleadpipeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNleadpipeActionPerformed

    private void DNwrenchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNwrenchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNwrenchActionPerformed

    private void ConservatoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConservatoryActionPerformed
        // TODO add your handling code here:
        playerLocation=2;
        updateLocation();
    }//GEN-LAST:event_ConservatoryActionPerformed

    private void StudyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudyActionPerformed
        // TODO add your handling code here:
        playerLocation=0;
        updateLocation();
    }//GEN-LAST:event_StudyActionPerformed

    private void LibraryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LibraryActionPerformed
        // TODO add your handling code here:
        playerLocation=1;
        updateLocation();
    }//GEN-LAST:event_LibraryActionPerformed

    private void BallroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BallroomActionPerformed
        // TODO add your handling code here:
        playerLocation=5;
        updateLocation();
    }//GEN-LAST:event_BallroomActionPerformed

    private void BilliardRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BilliardRoomActionPerformed
        // TODO add your handling code here:
        playerLocation=4;
        updateLocation();
    }//GEN-LAST:event_BilliardRoomActionPerformed

    private void HallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HallActionPerformed
        // TODO add your handling code here:
        playerLocation=3;
        updateLocation();
    }//GEN-LAST:event_HallActionPerformed

    private void KitchenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KitchenActionPerformed
        // TODO add your handling code here:
        playerLocation=8;
        updateLocation();
    }//GEN-LAST:event_KitchenActionPerformed

    private void DiningRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiningRoomActionPerformed
        // TODO add your handling code here:
        playerLocation=7;
        updateLocation();
    }//GEN-LAST:event_DiningRoomActionPerformed

    private void LoungeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoungeActionPerformed
        // TODO add your handling code here:
        playerLocation=6;
        updateLocation();
    }//GEN-LAST:event_LoungeActionPerformed

    private void Hallway12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway12ActionPerformed
        // TODO add your handling code here:
        playerLocation=12;
        updateLocation();
    }//GEN-LAST:event_Hallway12ActionPerformed

    private void Hallway11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway11ActionPerformed
        // TODO add your handling code here:
        playerLocation=11;
        updateLocation();
    }//GEN-LAST:event_Hallway11ActionPerformed

    private void Hallway13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway13ActionPerformed
        // TODO add your handling code here:
        playerLocation=13;
        updateLocation();
    }//GEN-LAST:event_Hallway13ActionPerformed

    private void Hallway18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway18ActionPerformed
        // TODO add your handling code here:
        playerLocation=18;
        updateLocation();
    }//GEN-LAST:event_Hallway18ActionPerformed

    private void Hallway17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway17ActionPerformed
        // TODO add your handling code here:
        playerLocation=17;
        updateLocation();
    }//GEN-LAST:event_Hallway17ActionPerformed

    private void Hallway16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway16ActionPerformed
        // TODO add your handling code here:
        playerLocation=16;
        updateLocation();
    }//GEN-LAST:event_Hallway16ActionPerformed

    private void Hallway14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway14ActionPerformed
        // TODO add your handling code here:
        playerLocation=14;
        updateLocation();
    }//GEN-LAST:event_Hallway14ActionPerformed

    private void Hallway9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway9ActionPerformed
        // TODO add your handling code here:
        playerLocation=9;
        updateLocation();
    }//GEN-LAST:event_Hallway9ActionPerformed

    private void Hallway19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway19ActionPerformed
        // TODO add your handling code here:
        playerLocation=19;
        updateLocation();
    }//GEN-LAST:event_Hallway19ActionPerformed

    private void Hallway10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway10ActionPerformed
        // TODO add your handling code here:
        playerLocation=10;
        updateLocation();
    }//GEN-LAST:event_Hallway10ActionPerformed

    private void Hallway15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway15ActionPerformed
        // TODO add your handling code here:
        playerLocation=15;
        updateLocation();
    }//GEN-LAST:event_Hallway15ActionPerformed

    private void Hallway20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hallway20ActionPerformed
        // TODO add your handling code here:
        playerLocation=20;
        updateLocation();
    }//GEN-LAST:event_Hallway20ActionPerformed

    private void startNewGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startNewGameButtonActionPerformed
        try {
            //Send a new game message to the backend
            gameID = clueLess.startNewGame(this);
            lobbyGameIDlabel.setText("GameID: "+ gameID);
            GameOps.setVisible(false);
            gameIDfield.setVisible(false);
            gameIDprompt.setVisible(false);
            startNewGameButton.setVisible(false);
            EnterUserID.setVisible(true);
            userIDfield.setVisible(true);
            JOptionPane.showMessageDialog(this, "Your Game ID is : "+gameID,"GAME ID" , JOptionPane.PLAIN_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(GameBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_startNewGameButtonActionPerformed

    private void gameIDfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameIDfieldActionPerformed
        try {
            // Send Game ID to join a game. Need to verify that the game code is valid
            System.out.println(evt.getActionCommand());
            String tempID = gameIDfield.getText();
            gameID = Integer.parseInt(tempID);
            lobbyGameIDlabel.setText("GameID: "+ tempID);
            clueLess.joinGame(gameID,this);
            GameOps.setVisible(false);
            gameIDfield.setVisible(false);
            gameIDprompt.setVisible(false);
            startNewGameButton.setVisible(false);
            EnterUserID.setVisible(true);
            userIDfield.setVisible(true);
            this.playersInLobby.setListData(users);
        } catch (IOException ex) {
            Logger.getLogger(GameBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch(NumberFormatException nf){
            JOptionPane.showMessageDialog(this, "Invalid Game ID", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_gameIDfieldActionPerformed

    private void userIDfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIDfieldActionPerformed
        // TODO add your handling code here:
        userID = userIDfield.getText();
        clueLess.sendUserName(userID);
        switchScreens("Lobby");
        lobbyWelcome.setText("Welcome: "+ userID);
        //users[0]=userID;
        this.playersInLobby.setListData(users);
        
    }//GEN-LAST:event_userIDfieldActionPerformed

    private void startGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGameButtonActionPerformed
        // TODO add your handling code here:
        if(userCount>=3){
            switchScreens("GameBoard");
            clueLess.writeMsg("Start Game");
        }
        else{
            JOptionPane.showMessageDialog(this, "You need 3 to 6 players to play the game","Player Quota Error" , JOptionPane.ERROR_MESSAGE);
        }
        int temp[] = {1, 5, 7};
        //startTurn(true,temp);
    }//GEN-LAST:event_startGameButtonActionPerformed

    private void opSuggestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opSuggestionActionPerformed
        // The user decided to make a suggestion!
        turnMenu.setVisible(false);
        suggestionMenu.setVisible(true);
        roomDropdown2.setEnabled(false);
        roomDropdown2.select(playerLocation);
    }//GEN-LAST:event_opSuggestionActionPerformed

    private void opMovePlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opMovePlayerActionPerformed
        // The user decided to move their player!
        turnMenu.setVisible(false);
        GamePopup.setVisible(false);
        for(int i=0;i<moveOpts.length;i++){
            openRoomSelection(moveOpts[i]);
        }
        //this.openRoomSelection();
    }//GEN-LAST:event_opMovePlayerActionPerformed

    private void opEndTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opEndTurnActionPerformed
        // The user ended their turn.
        turnMenu.setVisible(false);
        GamePopup.setVisible(false);
        clueLess.endTurn();
    }//GEN-LAST:event_opEndTurnActionPerformed

    private void opAccusationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opAccusationActionPerformed
        // The user decided to make an accusation!
        turnMenu.setVisible(false);
        accusationMenu.setVisible(true);
    }//GEN-LAST:event_opAccusationActionPerformed

    private void cancelAccusationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAccusationActionPerformed
        // return to previous menu
        accusationMenu.setVisible(false);
        turnMenu.setVisible(true);
    }//GEN-LAST:event_cancelAccusationActionPerformed

    private void makeSuggestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeSuggestionActionPerformed
        // Change back to the turn options menu
        suggestionMenu.setVisible(false);
        turnMenu.setVisible(true);
        opSuggestion.setEnabled(false);
        opMovePlayer.setEnabled(false);
        opEndTurn.setEnabled(true);
        // pull the indexes for the current selections and send out
        int tempSuspect = suspectDropdown2.getSelectedIndex();
        int tempRoom = roomDropdown2.getSelectedIndex();
        int tempWeapon = weaponDropdown2.getSelectedIndex();
        clueLess.playerMakesSuggestion(tempWeapon, tempRoom, tempSuspect);
    }//GEN-LAST:event_makeSuggestionActionPerformed

    private void makeAccusationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeAccusationActionPerformed
        // Change back to the turn options menu
        accusationMenu.setVisible(false);
        GamePopup.setVisible(false);
        // pull the indexes for the current selections and send out
        int tempSuspect = suspectDropdown.getSelectedIndex();
        int tempRoom = roomDropdown.getSelectedIndex();
        int tempWeapon = weaponDropdown.getSelectedIndex();
        clueLess.playerMakesAccusation(tempWeapon, tempRoom, tempSuspect);
    }//GEN-LAST:event_makeAccusationActionPerformed

    private void disproveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disproveButtonActionPerformed
        // TODO add your handling code here:
        //String cardShown = cardDropdown.getSelectedItem();
        int cardIdx =cardDropdown.getSelectedIndex();
        int tempCardType = cardTypeRefs[cardIdx];
        int tempCardID = cardIDRefs[cardIdx];
        clueLess.showCard(tempCardType,tempCardID);
        disproveSugMenu.setVisible(false);
        GamePopup.setVisible(false);
    }//GEN-LAST:event_disproveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
                
            }
        });
    }
    
    /**
     * This function will add a player to the list of players in the game while
     * users are waiting in the lobby.
     * @param playerName 
     */
    public void addPlayer(String playerName){
        users[userCount]=playerName;
        this.playersInLobby.setListData(users);
        userCount=userCount+1;
    }
    
    /**
     * Returns the suspect string represented by a given number.
     * @param suspectIndex
     * @return 
     */
    public String getSuspect(int suspectIndex){
        return users[suspectIndex];
    }
    
    /**
     * Returns the weapon string represented by a given number.
     * @param weaponIndex
     * @return 
     */
    public String getWeapon(int weaponIndex){
        return weaponDef[weaponIndex];
    }
    
    /**
     * Returns the room string represented by the given number
     * @param roomIndex
     * @return 
     */
    public String getRoom(int roomIndex){
        return roomDef[roomIndex];
    }
    
    /**
     * This function initializes the suspect list with the player names and 
     * updates the cards shown for each user to reflect those dealt to them.
     * @param GB 
     */
    public void setupGameBoard(){
        
        cardList.setEnabled(false);
        textUpdateBox.setEditable(false);
        textUpdateBox.setText("Setting up everything for you :)" + "\n");
        
        for(int i=0; i<6;i++){
            suspectDropdown.add(users[i]);
            suspectDropdown2.add(users[i]);
        }
        for(int i=0; i<9;i++){
            roomDropdown.add(roomDef[i]);
            roomDropdown2.add(roomDef[i]);
        }
        for(int i=0;i<6;i++){
            weaponDropdown.add(weaponDef[i]);
            weaponDropdown2.add(weaponDef[i]);
        }
        
        
        
    }
    
    /**
     * This function initializes the suspect list. Needs 6 names.
     * @param suspect 
     */
    public void genSuspectList(String[] suspect){
        // Initialize the suspect list in Detective Notes
        for(int i = 0; i<6;i++){
            if(suspect[i]==null){
                suspect[i] = suspectDef[i];
            }
        }            
        
        this.DNsuspect1.setText(suspect[0]);
        this.DNsuspect2.setText(suspect[1]);
        this.DNsuspect3.setText(suspect[2]);
        this.DNsuspect4.setText(suspect[3]);
        this.DNsuspect5.setText(suspect[4]);
        this.DNsuspect6.setText(suspect[5]);
    }
    
    /**
     * This function initializes the card list for the player.
     * @param roomType
     * @param roomID 
     */
    public void setCardList(int cardType[], int cardID[]){
        String cards[] = new String[cardType.length];
        
        // Populate the card options for the user to choose
        for(int i=0;i<cardType.length;i++){
            if(cardType[i]==0){ // Card is suspect
                cards[i] = users[cardID[i]];
            }
            else if(cardType[i]==1){ // Card is room
                cards[i] = roomDef[cardID[i]];
            }
            else{ // Card is weapon
                cards[i] = weaponDef[cardID[i]];
            }
            //System.out.println(cards[i]);
        }
        cardList.setListData(cards);
    }
    
    /**
     * This function generates the pop-up the displays a user's move options.
     * They can only make a suggestion in their current position if they were
     * moved there by another user. This is signified by the stayNSuggest flag.
     * Otherwise they have the choice of moving or making an accusation.
     * @param stayNSuggest
     * @param availableMoves 
     */
    public void startTurn(boolean stayNSuggest, int availableMoves[]){
        GamePopup.setVisible(true);
        turnMenu.setVisible(true);
        opAccusation.setEnabled(true);
        
       if(availableMoves != null){
            opMovePlayer.setEnabled(true);
            opEndTurn.setEnabled(false);
       }
       else{
            opMovePlayer.setEnabled(false);
            opEndTurn.setEnabled(true);
       }
        if(stayNSuggest){
            opSuggestion.setEnabled(false);
        }
        else{
            opSuggestion.setEnabled(false);
        }
        
        moveOpts = availableMoves;
        /*
        for(int i=0; i<availableMoves.length;i++){
            openRoomSelection(availableMoves[i]);
        }
        */
    }
    
    /**
     * This function is a shortcut for post-move options.
     */
    private void updateLocation(){
        clueLess.playerMove(playerLocation);
        closeRoomSelection();
        
        // return to turn options menu
        GamePopup.setVisible(true);
        turnMenu.setVisible(true);
        
        // Check if the location is a room (<9) or a hallway (>=9)
        if(playerLocation<9){
            opSuggestion.setEnabled(true);
            opEndTurn.setEnabled(false);
        }else{
            opSuggestion.setEnabled(false);
            opEndTurn.setEnabled(true);
        }
        
        opMovePlayer.setEnabled(false);
        
    }
    
    /**
     * This function will update the players shown in rooms on the map.
     * @param playerID
     * @param roomID 
     */
    public void updateMap(int playerID, int roomID){
        String temp;
        javax.swing.JButton rooms[]={Study,Library,Conservatory,Hall,
        BilliardRoom,Ballroom,Lounge,DiningRoom,Kitchen,Hallway9,
        Hallway10,Hallway11,Hallway12,Hallway13,Hallway14,Hallway15,
        Hallway16,Hallway17,Hallway18,Hallway19,Hallway20};
        
        temp = rooms[roomID].getText();
        System.out.println("Adding player to room "+roomID);
        rooms[roomID].setText("<html>"+temp+"<br /"+Integer.toString(playerID)+"<html>");
        
        if(playerLocations[playerID] != -1){
            int currplayerloc = playerLocations[playerID];
            String temp2 = rooms[currplayerloc].getText();

            if(temp2.contains(""+playerID)){
                System.out.print("Removing player from "+currplayerloc);
                String replace = temp2.replace(""+playerID, "");
            }
            
            rooms[currplayerloc].setText(temp2);
        }
        
        playerLocations[playerID]=roomID;
        /*
        switch(roomID){
            case 0:
                temp = Study.getText();
                Study.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 1: 
                temp = Library.getText();
                Library.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 2: 
                temp = Conservatory.getText();
                Conservatory.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 3:
                temp=Hall.getText();
                Hall.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 4:
                temp = BilliardRoom.getText();
                BilliardRoom.setText("<html>"+temp+"<br /"+Integer.toString(playerID)+"<html>");
                break;
            case 5:
                temp = Ballroom.getText();
                Ballroom.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 6:
                temp = Lounge.getText();
                Lounge.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 7:
                temp = DiningRoom.getText();
                DiningRoom.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 8:
                temp = Kitchen.getText();
                Kitchen.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 9:
                Hallway9.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 10:
                Hallway10.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 11:
                Hallway11.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 12:
                Hallway12.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 13:
                Hallway13.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 14:
                Hallway14.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 15:
                Hallway15.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 16:
                Hallway16.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 17:
                Hallway17.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 18:
                Hallway18.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 19:
                Hallway19.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            case 20:
                Hallway20.setText(roomDef[roomID]+Integer.toString(playerID));
                break;
            default: System.out.println("That is not a valid room code. \n");
                break;
            
        }
        Library.setText("Library\n"+suspectDef[playerID]); */
        
    }
    
    /**
     * This function requests a user disprove a suggestion.
     */
    public void disproveSuggestion(int cardType[], int cardID[]){
        GamePopup.setVisible(true);
        turnMenu.setVisible(false);
        accusationMenu.setVisible(false);
        suggestionMenu.setVisible(false);
        disproveSugMenu.setVisible(true);
        turnMenu.setVisible(false);
        accusationMenu.setVisible(false);
        suggestionMenu.setVisible(false);
        
        //Clear card dropdown
        cardDropdown.removeAll();
        // Populate the card options for the user to choose
        for(int i=0;i<cardType.length;i++){
            if(cardType[i]==0){ // Card is suspect
                cardDropdown.add(users[cardID[i]]);
            }
            else if(cardType[i]==1){ // Card is room
                cardDropdown.add(roomDef[cardID[i]]);
            }
            else{ // Card is weapon
                cardDropdown.add(weaponDef[cardID[i]]);
            }
        }
        cardTypeRefs=cardType;
        cardIDRefs=cardID;
        
    }
    
    /**
     * Show text updates along the bottom of the screen. 
     * @param updateMSG 
     */
    public void pushTextUpdate(String updateMSG){
        this.textUpdateBox.append(updateMSG + "\n");
    }
    
    /**
     * This function switches between panels to make the appropriate screen
     * visible to the user.
     * @param screenID 
     */
    public void switchScreens(String screenID){
        switch(screenID){
            case "Lobby":
                Lobby.setVisible(true);
                Gameboard.setVisible(false);
                Welcome.setVisible(false);
                Winning.setVisible(false);
                Losing.setVisible(false);
                break;
            case "GameBoard":
                Gameboard.setVisible(true);
                Lobby.setVisible(false);
                Welcome.setVisible(false);
                Winning.setVisible(false);
                Losing.setVisible(false);
                break;
            case "Welcome":
                Welcome.setVisible(true);
                Lobby.setVisible(false);
                Gameboard.setVisible(false);
                Winning.setVisible(false);
                Losing.setVisible(false);
                // set all the fields on welcome screen to visible as appropriate
                EnterUserID.setVisible(false);
                userIDfield.setVisible(false);
                GameOps.setVisible(true);
                gameIDfield.setVisible(true);
                gameIDprompt.setVisible(true);
                startNewGameButton.setVisible(true);
                break;
            case "Winning":
                Winning.setVisible(true);
                Lobby.setVisible(false);
                Gameboard.setVisible(false);
                Welcome.setVisible(false);
                Losing.setVisible(false);
                break;
            case "Losing":
                Losing.setVisible(true);
                Lobby.setVisible(false);
                Gameboard.setVisible(false);
                Welcome.setVisible(false);
                Winning.setVisible(false);
                break;
            default:
                break;
        }
    }
    
    /**
     * This function takes the room ID and activates the buttons corresponding
     * to the valid locations a player may move.
     * @param roomID 
     */
    public void openRoomSelection(int roomID){
        switch(roomID){
            case 0:
                Study.setEnabled(true);
                break;
            case 1: 
                Library.setEnabled(true);
                break;
            case 2: 
                Conservatory.setEnabled(true);
                break;
            case 3:
                Hall.setEnabled(true);
                break;
            case 4:
                BilliardRoom.setEnabled(true);
                break;
            case 5:
                Ballroom.setEnabled(true);
                break;
            case 6:
                Lounge.setEnabled(true);
                break;
            case 7:
                DiningRoom.setEnabled(true);
                break;
            case 8:
                Kitchen.setEnabled(true);
                break;
            case 9:
                Hallway9.setEnabled(true);
                break;
            case 10:
                Hallway10.setEnabled(true);
                break;
            case 11:
                Hallway11.setEnabled(true);
                break;
            case 12:
                Hallway12.setEnabled(true);
                break;
            case 13:
                Hallway13.setEnabled(true);
                break;
            case 14:
                Hallway14.setEnabled(true);
                break;
            case 15:
                Hallway15.setEnabled(true);
                break;
            case 16:
                Hallway16.setEnabled(true);
                break;
            case 17:
                Hallway17.setEnabled(true);
                break;
            case 18:
                Hallway18.setEnabled(true);
                break;
            case 19:
                Hallway19.setEnabled(true);
                break;
            case 20:
                Hallway20.setEnabled(true);
                break;
            default: System.out.println("That is not a valid room code. \n");
                break;
            
        }
            
    }
    
    /**
     * This function disables all of the map buttons after the user has selected
     * their move. This prevents the user from moving when it's not their turn.
     */
    private void closeRoomSelection(){
        Study.setEnabled(false);
        Hallway11.setEnabled(false);
        Hall.setEnabled(false);
        Hallway16.setEnabled(false);
        Lounge.setEnabled(false);
        Hallway9.setEnabled(false);
        Hallway14.setEnabled(false);
        Hallway19.setEnabled(false);
        Library.setEnabled(false);
        Hallway12.setEnabled(false);
        BilliardRoom.setEnabled(false);
        Hallway17.setEnabled(false);
        DiningRoom.setEnabled(false);
        Hallway10.setEnabled(false);
        Hallway15.setEnabled(false);
        Hallway20.setEnabled(false);
        Conservatory.setEnabled(false);
        Hallway13.setEnabled(false);
        Ballroom.setEnabled(false);
        Hallway18.setEnabled(false);
        Kitchen.setEnabled(false);
    }
    
    /**
     * This function hides all of the popup menus and other screens when the 
     * gameboard is setup initially.
     */
    private void hideMenus(){
        turnMenu.setVisible(false);
        suggestionMenu.setVisible(false);
        accusationMenu.setVisible(false);
        GamePopup.setVisible(false);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ballroom;
    private javax.swing.JButton BilliardRoom;
    private javax.swing.JButton Conservatory;
    private javax.swing.JCheckBox DNballroom;
    private javax.swing.JCheckBox DNbilliardroom;
    private javax.swing.JCheckBox DNcandlestick;
    private javax.swing.JCheckBox DNconservatory;
    private javax.swing.JCheckBox DNdiningroom;
    private javax.swing.JCheckBox DNhall;
    private javax.swing.JCheckBox DNkitchen;
    private javax.swing.JCheckBox DNknife;
    private javax.swing.JCheckBox DNleadpipe;
    private javax.swing.JCheckBox DNlibrary;
    private javax.swing.JCheckBox DNlounge;
    private javax.swing.JCheckBox DNpistol;
    private javax.swing.JCheckBox DNrope;
    private javax.swing.JCheckBox DNstudy;
    private javax.swing.JCheckBox DNsuspect1;
    private javax.swing.JCheckBox DNsuspect2;
    private javax.swing.JCheckBox DNsuspect3;
    private javax.swing.JCheckBox DNsuspect4;
    private javax.swing.JCheckBox DNsuspect5;
    private javax.swing.JCheckBox DNsuspect6;
    private javax.swing.JCheckBox DNwrench;
    private javax.swing.JPanel DetectiveNotesPanel;
    private javax.swing.JButton DiningRoom;
    private javax.swing.JPanel EnterUserID;
    private javax.swing.JPanel GameOps;
    private javax.swing.JPanel GamePopup;
    private javax.swing.JPanel Gameboard;
    private javax.swing.JPanel GameboardPanel;
    private javax.swing.JButton Hall;
    private javax.swing.JButton Hallway10;
    private javax.swing.JButton Hallway11;
    private javax.swing.JButton Hallway12;
    private javax.swing.JButton Hallway13;
    private javax.swing.JButton Hallway14;
    private javax.swing.JButton Hallway15;
    private javax.swing.JButton Hallway16;
    private javax.swing.JButton Hallway17;
    private javax.swing.JButton Hallway18;
    private javax.swing.JButton Hallway19;
    private javax.swing.JButton Hallway20;
    private javax.swing.JButton Hallway9;
    private javax.swing.JButton Kitchen;
    private javax.swing.JButton Library;
    private javax.swing.JPanel Lobby;
    private javax.swing.JScrollPane LobbyPlayersScrollPane;
    private javax.swing.JPanel Losing;
    private javax.swing.JButton Lounge;
    private javax.swing.JButton Study;
    private javax.swing.JPanel Welcome;
    private javax.swing.JPanel Winning;
    private javax.swing.JLabel accusationLabel;
    private javax.swing.JPanel accusationMenu;
    private javax.swing.JLabel accusationWarning;
    private java.awt.Button cancelAccusation;
    private java.awt.Choice cardDropdown;
    private javax.swing.JList<String> cardList;
    private javax.swing.JPanel cardPanel;
    private java.awt.Button disproveButton;
    private javax.swing.JPanel disproveSugMenu;
    private javax.swing.JTextField gameIDfield;
    private javax.swing.JLabel gameIDprompt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JLabel lobbyGameIDlabel;
    private javax.swing.JLabel lobbyWelcome;
    private java.awt.Button makeAccusation;
    private java.awt.Button makeSuggestion;
    private java.awt.Button opAccusation;
    private java.awt.Button opEndTurn;
    private java.awt.Button opMovePlayer;
    private java.awt.Button opSuggestion;
    private javax.swing.JList<String> playersInLobby;
    private java.awt.Choice roomDropdown;
    private java.awt.Choice roomDropdown2;
    private java.awt.Label roomlabel;
    private java.awt.Label roomlabel2;
    private javax.swing.JPanel smallerGameboardPanel;
    private javax.swing.JPanel startGameBox;
    private javax.swing.JButton startGameButton;
    private javax.swing.JLabel startGamePrompt;
    private javax.swing.JLabel startGamePrompt1;
    private javax.swing.JButton startNewGameButton;
    private javax.swing.JLabel suggestionLabel;
    private javax.swing.JPanel suggestionMenu;
    private java.awt.Choice suspectDropdown;
    private java.awt.Choice suspectDropdown2;
    private java.awt.Label suspectlabel;
    private java.awt.Label suspectlabel2;
    private javax.swing.JTextArea textUpdateBox;
    private javax.swing.JScrollPane textUpdatePanel;
    private javax.swing.JPanel turnMenu;
    private javax.swing.JTextField userIDfield;
    private javax.swing.JLabel userIDprompt;
    private java.awt.Choice weaponDropdown;
    private java.awt.Choice weaponDropdown2;
    private java.awt.Label weaponlabel;
    private java.awt.Label weaponlabel2;
    // End of variables declaration//GEN-END:variables
}
